{
  "version": 3,
  "sources": ["../../random/mod.ts"],
  "sourcesContent": ["\nconst symbol1Start = 33;\nconst symbol1End = 47;\n\nconst numberStart = 48;\nconst numberEnd = 57;\n\nconst symbol2Start = 58;\nconst symbol2End = 64;\n\nconst upperStart = 65;\nconst upperEnd = 90;\n\nconst symbol3Start = 91;\nconst symbol3End = 96;\n\nconst lowerStart = 97;\nconst lowerEnd = 122;\n\nconst symbol4Start = 123;\nconst symbol4End = 126;\n\nconst anyStart = 33;\nconst anyEnd = 126;\n\nconst translator = 2 ** 32;\n\nexport const randomFloat = (): number => {\n    return window.crypto.getRandomValues(new Uint32Array(1))[ 0 ] / translator;\n};\n\nexport const randomInteger = (min: number, max: number): number => {\n    if (typeof min !== 'number') throw new Error('min number required');\n    if (typeof max !== 'number') throw new Error('max number required');\n    if (min >= max) throw new Error('min must be less than max');\n    return Math.floor(randomFloat() * (max - min) + min);\n};\n\nexport const randomNumber = (): string => String.fromCharCode(randomInteger(numberStart, numberEnd));\n\nexport const randomUpper = (): string => String.fromCharCode(randomInteger(upperStart, upperEnd));\n\nexport const randomLower = (): string => String.fromCharCode(randomInteger(lowerStart, lowerEnd));\n\nexport const randomAny = (): string => String.fromCharCode(randomInteger(anyStart, anyEnd));\n\n/**\n * @description Generates a random string of configurable length with upper, lower, symbol, or number chars.\n * @param {Object}\n * @returns {String}\n */\nexport const random = (\n    { length = 8, upper = true, lower = true, symbol = true, number = true, }:\n        { length?: number, upper?: boolean, lower?: boolean, symbol?: boolean, number?: boolean, } =\n        { length: 8, upper: true, lower: true, symbol: true, number: true, }\n): string => {\n\n    if (!length) throw new Error('length number required');\n    if (typeof length !== 'number') throw new Error('length number required');\n    if (typeof upper !== 'boolean') throw new Error('upper boolean required');\n    if (typeof lower !== 'boolean') throw new Error('lower boolean required');\n    if (typeof symbol !== 'boolean') throw new Error('symbol boolean required');\n    if (typeof number !== 'boolean') throw new Error('number boolean required');\n    if (!upper && !lower && !symbol && !number) throw new Error('upper, lower, symbol, or number required');\n\n    let result = '';\n\n    while (length) {\n        const integer = randomInteger(anyStart, anyEnd);\n\n        if (upper && integer >= upperStart && integer <= upperEnd) {\n            result += String.fromCharCode(integer);\n            length--;\n        } else if (lower && integer >= lowerStart && integer <= lowerEnd) {\n            result += String.fromCharCode(integer);\n            length--;\n        } else if (number && integer >= numberStart && integer <= numberEnd) {\n            result += String.fromCharCode(integer);\n            length--;\n        } else if (symbol && (\n            integer >= symbol1Start && integer <= symbol1End ||\n            integer >= symbol2Start && integer <= symbol2End ||\n            integer >= symbol3Start && integer <= symbol3End ||\n            integer >= symbol4Start && integer <= symbol4End\n        )) {\n            result += String.fromCharCode(integer);\n            length--;\n        }\n\n    }\n\n    return result;\n};\n"],
  "mappings": ";;;;;;;;;;AACA,IAAM,eAAe;AACrB,IAAM,aAAa;AAEnB,IAAM,cAAc;AACpB,IAAM,YAAY;AAElB,IAAM,eAAe;AACrB,IAAM,aAAa;AAEnB,IAAM,aAAa;AACnB,IAAM,WAAW;AAEjB,IAAM,eAAe;AACrB,IAAM,aAAa;AAEnB,IAAM,aAAa;AACnB,IAAM,WAAW;AAEjB,IAAM,eAAe;AACrB,IAAM,aAAa;AAEnB,IAAM,WAAW;AACjB,IAAM,SAAS;AAEf,IAAM,aAAa,KAAK;AAEjB,IAAM,cAAc,MAAc;AACrC,SAAO,OAAO,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAG,CAAE,IAAI;AACpE;AAEO,IAAM,gBAAgB,CAAC,KAAa,QAAwB;AAC/D,MAAI,OAAO,QAAQ;AAAU,UAAM,IAAI,MAAM,qBAAqB;AAClE,MAAI,OAAO,QAAQ;AAAU,UAAM,IAAI,MAAM,qBAAqB;AAClE,MAAI,OAAO;AAAK,UAAM,IAAI,MAAM,2BAA2B;AAC3D,SAAO,KAAK,MAAM,YAAY,KAAK,MAAM,OAAO,GAAG;AACvD;AAEO,IAAM,eAAe,MAAc,OAAO,aAAa,cAAc,aAAa,SAAS,CAAC;AAE5F,IAAM,cAAc,MAAc,OAAO,aAAa,cAAc,YAAY,QAAQ,CAAC;AAEzF,IAAM,cAAc,MAAc,OAAO,aAAa,cAAc,YAAY,QAAQ,CAAC;AAEzF,IAAM,YAAY,MAAc,OAAO,aAAa,cAAc,UAAU,MAAM,CAAC;AAOnF,IAAM,SAAS,CAClB,EAAE,SAAS,GAAG,QAAQ,MAAM,QAAQ,MAAM,SAAS,MAAM,SAAS,KAAM,IAEpE,EAAE,QAAQ,GAAG,OAAO,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,KAAM,MAC9D;AAET,MAAI,CAAC;AAAQ,UAAM,IAAI,MAAM,wBAAwB;AACrD,MAAI,OAAO,WAAW;AAAU,UAAM,IAAI,MAAM,wBAAwB;AACxE,MAAI,OAAO,UAAU;AAAW,UAAM,IAAI,MAAM,wBAAwB;AACxE,MAAI,OAAO,UAAU;AAAW,UAAM,IAAI,MAAM,wBAAwB;AACxE,MAAI,OAAO,WAAW;AAAW,UAAM,IAAI,MAAM,yBAAyB;AAC1E,MAAI,OAAO,WAAW;AAAW,UAAM,IAAI,MAAM,yBAAyB;AAC1E,MAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC;AAAQ,UAAM,IAAI,MAAM,0CAA0C;AAEtG,MAAI,SAAS;AAEb,SAAO,QAAQ;AACX,UAAM,UAAU,cAAc,UAAU,MAAM;AAE9C,QAAI,SAAS,WAAW,cAAc,WAAW,UAAU;AACvD,gBAAU,OAAO,aAAa,OAAO;AACrC;AAAA,IACJ,WAAW,SAAS,WAAW,cAAc,WAAW,UAAU;AAC9D,gBAAU,OAAO,aAAa,OAAO;AACrC;AAAA,IACJ,WAAW,UAAU,WAAW,eAAe,WAAW,WAAW;AACjE,gBAAU,OAAO,aAAa,OAAO;AACrC;AAAA,IACJ,WAAW,WACP,WAAW,gBAAgB,WAAW,cACtC,WAAW,gBAAgB,WAAW,cACtC,WAAW,gBAAgB,WAAW,cACtC,WAAW,gBAAgB,WAAW,aACvC;AACC,gBAAU,OAAO,aAAa,OAAO;AACrC;AAAA,IACJ;AAAA,EAEJ;AAEA,SAAO;AACX;",
  "names": []
}
